name: SGPM (Singapore PopMart) Monitor

on:
  schedule:
    - cron: '*/5 * * * *'  # 每5分钟运行一次
  workflow_dispatch:  # 允许手动触发
  push:
    branches: [ main ]  # 推送到主分支时运行（用于测试）
    paths:
      - 'src/simple-sgpm-main.ts'  # 简化版本主文件
      - 'src/services/SimpleSgpmService.ts'  # 简化版本服务
      - 'src/config-sgpm.ts'
      - '.github/workflows/sgpm-monitor.yml'

env:
  NODE_ENV: production
  USE_PROXY: false  # SGPM不需要代理
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: false
  PUPPETEER_DOWNLOAD_HOST: 'https://npmmirror.com/mirrors/chromium'

jobs:
  sgpm-monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # SGPM监控通常较快

    strategy:
      fail-fast: false  # 即使失败也不影响其他workflow

    env:
      # SGPM专用的Telegram配置
      SGPM_BOT_TOKEN: ${{ secrets.SGPM_BOT_TOKEN }}
      SGPM_CHAT_ID: ${{ secrets.SGPM_CHAT_ID }}
      # 调试模式
      DEBUG_MODE: ${{ vars.DEBUG_MODE || 'false' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # 只获取最新提交，加快速度

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --include=dev
          # 安装Puppeteer的Chromium
          npx puppeteer browsers install chrome

      - name: Verify SGPM environment
        run: |
          echo "✅ Node: $(node --version), NPM: $(npm --version)"
          echo "🤖 Bot: ${SGPM_BOT_TOKEN:+✅}${SGPM_BOT_TOKEN:-❌}, Chat: ${SGPM_CHAT_ID:+✅}${SGPM_CHAT_ID:-❌}"

      - name: Check SGPM status
        run: |
          echo "📋 状态文件: $([ -f 'sgpm-products-status.json' ] && echo '✅ 存在' || echo '❌ 不存在')"

      - name: Run SGPM monitoring (Simple Version)
        run: |
          echo "🚀 启动简化SGPM监控..."
          npx ts-node src/simple-sgpm-main.ts 2>&1 | tee sgpm-monitoring.log
        timeout-minutes: 8  # 进一步优化超时时间

      - name: Check results
        if: always()
        run: |
          # 简化的结果检查
          STATUS_FILE=$([ -f "sgpm-products-status.json" ] && echo "✅" || echo "❌")
          LOG_LINES=$([ -f "sgpm-monitoring.log" ] && wc -l < sgpm-monitoring.log || echo "0")
          ERRORS=$([ -f "sgpm-monitoring.log" ] && grep -c -i "error\|fail" sgpm-monitoring.log 2>/dev/null || echo "0")
          SUCCESS=$([ -f "sgpm-monitoring.log" ] && grep -c -i "✅\|完成\|成功" sgpm-monitoring.log 2>/dev/null || echo "0")

          echo "📊 结果: 状态文件${STATUS_FILE} | 日志${LOG_LINES}行 | 错误${ERRORS} | 成功${SUCCESS}"

      - name: 🐛 调试窗口 - 错误分析
        if: always()
        run: |
          echo "==================== 🐛 调试窗口开始 ===================="
          echo "📅 运行时间: $(date)"
          echo "🔢 运行编号: ${{ github.run_number }}"
          echo "🌐 环境信息: GitHub Actions (ubuntu-latest)"
          echo ""

          # 检查状态文件
          if [ -f "sgpm-products-status.json" ]; then
            echo "📋 状态文件: ✅ 存在"
            echo "📄 状态文件大小: $(wc -c < sgpm-products-status.json) bytes"
          else
            echo "📋 状态文件: ❌ 不存在"
          fi
          echo ""

          # 分析日志文件
          if [ -f "sgpm-monitoring.log" ]; then
            echo "📊 日志统计:"
            echo "  - 总行数: $(wc -l < sgpm-monitoring.log)"
            echo "  - 错误数: $(grep -c -i "error\|fail\|❌" sgpm-monitoring.log 2>/dev/null || echo "0")"
            echo "  - 警告数: $(grep -c -i "warn\|⚠️" sgpm-monitoring.log 2>/dev/null || echo "0")"
            echo "  - 成功数: $(grep -c -i "✅\|完成\|成功" sgpm-monitoring.log 2>/dev/null || echo "0")"
            echo ""

            # 显示最后的错误信息
            echo "🔴 最近的错误信息:"
            echo "----------------------------------------"
            grep -i "error\|fail\|❌" sgpm-monitoring.log | tail -10 || echo "无错误信息"
            echo "----------------------------------------"
            echo ""

            # 显示最后的警告信息
            echo "🟡 最近的警告信息:"
            echo "----------------------------------------"
            grep -i "warn\|⚠️" sgpm-monitoring.log | tail -5 || echo "无警告信息"
            echo "----------------------------------------"
            echo ""

            # 显示浏览器相关错误
            echo "🌐 浏览器相关错误:"
            echo "----------------------------------------"
            grep -i "browser\|puppeteer\|target\|session\|protocol" sgpm-monitoring.log | grep -i "error\|fail" | tail -5 || echo "无浏览器错误"
            echo "----------------------------------------"
            echo ""

            # 显示最后几行日志
            echo "📝 最后10行日志:"
            echo "----------------------------------------"
            tail -10 sgpm-monitoring.log
            echo "----------------------------------------"
          else
            echo "📊 日志文件: ❌ 不存在"
          fi

          echo ""
          echo "💡 复制上面的错误信息给开发者分析"
          echo "==================== 🐛 调试窗口结束 ===================="

      - name: 📋 错误摘要 - 快速复制区域
        if: failure()
        run: |
          echo "==================== 📋 错误摘要 (快速复制) ===================="
          echo "🚨 运行失败 - 关键错误信息:"
          echo ""

          if [ -f "sgpm-monitoring.log" ]; then
            # 提取关键错误信息
            echo "🔥 致命错误:"
            grep -i "error.*:" sgpm-monitoring.log | tail -3 || echo "无致命错误"
            echo ""

            echo "⚠️ 浏览器问题:"
            grep -i "targetcloseerror\|protocol error\|session closed\|browser.*fail" sgpm-monitoring.log | tail -3 || echo "无浏览器问题"
            echo ""

            echo "🔧 连接问题:"
            grep -i "connection\|timeout\|abort\|refused" sgpm-monitoring.log | tail -3 || echo "无连接问题"
            echo ""

            echo "💥 异常堆栈:"
            grep -A 2 -i "stack.*:" sgpm-monitoring.log | tail -6 || echo "无异常堆栈"
            echo ""
          fi

          echo "📊 快速统计:"
          echo "- 运行编号: ${{ github.run_number }}"
          echo "- 时间: $(date)"
          echo "- 错误数: $([ -f "sgpm-monitoring.log" ] && grep -c -i "error" sgpm-monitoring.log || echo "0")"
          echo "- 状态文件: $([ -f "sgpm-products-status.json" ] && echo "存在" || echo "缺失")"
          echo ""
          echo "🔗 完整日志: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "==================== 📋 错误摘要结束 ===================="

      - name: Upload logs
        if: failure()  # 只在失败时上传日志
        uses: actions/upload-artifact@v4
        with:
          name: sgpm-logs-${{ github.run_number }}
          path: sgpm-monitoring.log
          retention-days: 3  # 减少保留时间

      - name: Notify failure
        if: failure()
        run: |
          # 简化的失败通知
          if [ -n "$SGPM_BOT_TOKEN" ] && [ -n "$SGPM_CHAT_ID" ]; then
            curl -s -X POST "https://api.telegram.org/bot${SGPM_BOT_TOKEN}/sendMessage" \
              -d chat_id="${SGPM_CHAT_ID}" \
              -d text="� SGPM监控失败 #${{ github.run_number }} - ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
              > /dev/null 2>&1
          fi

      - name: Cleanup
        if: always()
        run: rm -f sgpm-monitoring.log
